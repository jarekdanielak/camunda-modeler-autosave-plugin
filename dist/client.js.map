{"version":3,"file":"client.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAEA","sources":["webpack://camunda-modeler-autosave-plugin/./client/AutoSavePlugin.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/components.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/react.js","webpack://camunda-modeler-autosave-plugin/./resources/timer.svg","webpack://camunda-modeler-autosave-plugin/webpack/bootstrap","webpack://camunda-modeler-autosave-plugin/webpack/runtime/compat get default export","webpack://camunda-modeler-autosave-plugin/webpack/runtime/define property getters","webpack://camunda-modeler-autosave-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://camunda-modeler-autosave-plugin/webpack/runtime/make namespace object","webpack://camunda-modeler-autosave-plugin/./client/index.js"],"sourcesContent":["/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport React, { useEffect, useState, useRef } from 'camunda-modeler-plugin-helpers/react';\nimport { Fill } from 'camunda-modeler-plugin-helpers/components';\n\nimport Icon from '../resources/timer.svg';\n\n/**\n * An example client extension plugin to enable auto saving functionality\n * in the Camunda Modeler\n */\nexport default function AutoSavePlugin(props) {\n\n  /**\n    * The component props include APIs the Application offers plugins:\n    *\n    * - config: save and retrieve information to the local configuration\n    * - displayNotification: show notifications inside the application\n    * - log: log information into the Log panel\n    * - settings: register and retrieve the application settings\n    * - subscribe: hook into application events, like <tab.saved>, <app.activeTabChanged> etc.\n    * - triggerAction: execute editor actions, like <save>, <open-diagram> etc.\n    */\n  const {\n    displayNotification,\n    subscribe,\n    settings,\n    triggerAction\n  } = props;\n\n  const [ enabled, setEnabled ] = useState(false);\n  const [ interval, setInterval ] = useState(5);\n\n  const [ activeTab, setActiveTab ] = useState({});\n\n  const timer = useRef(null);\n\n  /**\n    * Register the plugin settings to enable the user to configure\n    * the auto-save feature in the Modeler settings window.\n    *\n    * Learn more:\n    * - Settings in Camunda Modeler: https://docs.camunda.io/docs/next/components/modeler/desktop-modeler/settings/\n    * - Settings API: https://github.com/camunda/camunda-modeler/blob/main/client/src/app/Settings.js\n  */\n  useEffect(() => {\n    const values = settings.register(pluginSettings);\n\n    setEnabled(values['autoSavePlugin.enabled']);\n    setValidInterval(values['autoSavePlugin.interval']);\n\n    settings.subscribe('autoSavePlugin.enabled', ({ value }) => {\n      setEnabled(value);\n    });\n\n    settings.subscribe('autoSavePlugin.interval', ({ value }) => {\n      setValidInterval(value);\n    });\n\n  }, [ settings ]);\n\n  /**\n   * Use the `subscribe` API to hook into application events.\n   */\n  useEffect(() => {\n\n    subscribe('app.activeTabChanged', ({ activeTab }) => {\n      setActiveTab(activeTab);\n    });\n\n    subscribe('tab.saved', () => {\n      if (enabled && !timer.current) {\n        startTimer();\n      }\n    });\n\n  }, [ subscribe ]);\n\n  useEffect(() => {\n    if (enabled && activeTab?.file?.path) {\n      startTimer();\n    }\n\n    return () => clearTimer();\n  }, [ activeTab, interval ]);\n\n\n  const startTimer = () => {\n    timer.current = setTimeout(() => {\n      save();\n      startTimer(); // Restart the timer after saving\n    }, interval * 1000);\n  };\n\n  const clearTimer = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = null;\n    }\n  };\n\n  const save = () => {\n    triggerAction('save')\n      .then(tab => {\n        if (!tab) {\n          return displayNotification({ title: 'Failed to save' });\n        }\n      });\n  };\n\n  const setValidInterval = (value) => {\n    const num = parseInt(value, 10);\n\n    if (isNaN(num) || num <= 0) {\n      displayNotification({\n        title: 'AutoSave Plugin: Invalid interval',\n        type: 'error',\n        content: 'Please enter a valid number greater than 0.'\n      });\n\n      return;\n    }\n\n    setInterval(num);\n  };\n\n\n  if (!enabled) {\n    return null;\n  }\n\n  // We can a <Fill> component to render into a specific slot in the Modeler UI\n  // Here we render an icon indicating the auto-save is active\n  return (\n    <Fill slot=\"status-bar__app\" group=\"1_autosave\">\n      <button className=\"btn\" title=\"AutoSave enabled\"><Icon /></button>\n    </Fill>\n  );\n}\n\nconst pluginSettings = {\n  id: 'autoSavePlugin',\n  title: 'Auto-Save Plugin',\n  properties: {\n    'autoSavePlugin.enabled': {\n      type: 'boolean',\n      default: false,\n      label: 'Enabled'\n    },\n    'autoSavePlugin.interval': {\n      type: 'text',\n      default: '5',\n      label: 'Interval (seconds)',\n    },\n  }\n};\n","if (!window.components) {\n  throw notCompatible('3.4');\n}\n\nfunction notCompatible(requiredVersion) {\n  return new Error('Not compatible with Camunda Modeler < v' + requiredVersion);\n}\n\nexport const NotCompatible = function(requiredVersion) {\n  return function NotCompatibleComponent() {\n    throw notCompatible(requiredVersion);\n  };\n};\n\n/**\n * Fill component. Set `slot` to \"toolbar\" to include in the top toolbar.\n * Use `group` and `priority=0` to place for correct ordering. The higher\n * the priority, the earlier the Fill is displayed within the group.\n *\n * @type {import('react').ComponentType<{ slot: string, group?: string, priority?: Number }>}\n *\n * @example\n *\n * import { Fill } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomFill(props) {\n *   return (\n *     <Fill group=\"4_export\" slot=\"toolbar\" priority={100}>\n *       <button type=\"button\" onClick={ props.openExportTool }>\n *         Open Export Tool\n *       </button>\n *     </Fill>\n *   );\n * }\n */\nexport const Fill = window.components.Fill;\n\n/**\n * Modal component.\n *\n * @type {import('react').ComponentType<{ onClose: Function }>}\n *\n * @example\n *\n * import { Modal } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomModal(props) {\n *   return (\n *    <Modal onClose={ props.onClose }>\n *      <Modal.Title>\n *        Custom Modal\n *      </Modal.Title>\n *      <Modal.Body>\n *        Hello world!\n *      </Modal.Body>\n *      <Modal.Footer>\n *        <button type=\"button\" onClick={ props.onClose }>\n *          Close\n *        </button>\n *      </Modal.Footer>\n *    </Modal>\n *   );\n * }\n */\nexport const Modal = window.components.Modal;\n\n/**\n * Overlay component.\n *\n * @type {import('react').ComponentType<{ \n *  onClose: Function, \n *  anchor: Node, \n *  offset?: { top?: number, bottom?: number, left?: number, right?: number }, \n *  maxWidth?: number | string,\n *  maxHeight?: number | string,\n *  minWidth?: number | string,\n *  minHeight?: number | string\n * }>}\n *\n * @example\n * \n * import { Overlay } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomOverlay(props) {\n *   return (\n *    <Overlay onClose={ props.onClose } anchor={ props.btn_ref } offset={ props.anchor }>\n *      <Overlay.Title>\n *        Custom Modal\n *      </Overlay.Title>\n *      <Overlay.Body>\n *        Hello world!\n *      </Overlay.Body>\n *      <Overlay.Footer>\n *        <button type=\"button\" onClick={ props.onClose }>\n *          Close\n *        </button>\n *      </Overlay.Footer>\n *    </Overlay>\n *   );\n * }\n */\n export const Overlay = window.components.Overlay || NotCompatible('5.0');\n\n /**\n * Section component.\n *\n * @type {import('react').ComponentType<{ maxHeight: Number | String, relativePos: Boolean } }>}\n *\n * @example\n * \n * import { Section } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomSection(props) {\n *   return (\n *    <Section maxHeight=\"240px\">\n *     <Section.Header>\n *       Custom section\n *     </Section.Header>\n *     <Section.Body>\n *       Hello world!\n *     </Section.Body>\n *     <Section.Actions>\n *      <button type=\"button\" onClick={ props.onClose }>\n *        Close\n *      </button>\n *     </Section.Actions>\n *    </Section>\n *   );\n * }\n */\nexport const Section = window.components.Section || NotCompatible('5.0');\n\n /**\n * ToggleSwitch component.\n *\n * @type {import('react').ComponentType<{ id: string, name: string, label?: string, switcherLabel?: string, description?: string }>}\n *\n * @example\n * \n * import { ToggleSwitch } from 'camunda-modeler-plugin-helpers/components';\n *\n * function CustomToggle(props) {\n *   return (\n *    <Formik initialValues={ initialValues } onSubmit={ this.onSubmit }>\n *      {() => (\n *        <Form>\n *          <Field\n *            component={ ToggleSwitch }\n *            switcherLabel=\"Switcher label\"\n *            id={ id }\n *            name={ name }\n *            description=\"Toggle description\"\n *          />\n *        </Form>\n *       )}\n *    </Formik>\n *   );\n * }\n */\nexport const ToggleSwitch = window.components.ToggleSwitch || NotCompatible('5.0');","/**\n * Validate and register a client plugin.\n *\n * @param {Object} plugin\n * @param {String} type\n */\nexport function registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\n * Validate and register a client plugin.\n *\n * @param {import('react').ComponentType} extension\n *\n * @example\n *\n * import MyExtensionComponent from './MyExtensionComponent';\n *\n * registerClientExtension(MyExtensionComponent);\n */\nexport function registerClientExtension(component) {\n  registerClientPlugin(component, 'client');\n}\n\n/**\n * Validate and register a bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\n}\n\n/**\n * Validate and register a platform specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerPlatformBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.platform.modeler.additionalModules');\n}\n\n/**\n * Validate and register a cloud specific bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerCloudBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.cloud.modeler.additionalModules');\n}\n\n/**\n * Validate and register a bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a cloud specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerCloudDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerCloudDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerCloudDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.cloud.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a platform specific dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerPlatformDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerPlatformDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerPlatformDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.platform.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a cloud specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerCloudDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerCloudDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerCloudDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerCloudDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.cloud.modeler.${c}.additionalModules`));\n}\n\n/**\n * Validate and register a platform specific dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerPlatformDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerPlatformDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerPlatformDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerPlatformDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.platform.modeler.${c}.additionalModules`));\n}\n\n/**\n * Return the modeler directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getModelerDirectory() {\n  return window.getModelerDirectory();\n}\n\n/**\n * Return the modeler plugin directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getPluginsDirectory() {\n  return window.getPluginsDirectory();\n}","if (!window.react) {\n  throw new Error('Not compatible with Camunda Modeler < 3.4');\n}\n\n/**\n * React object used by Camunda Modeler. Use it to create UI extension.\n *\n * @type {import('react')}\n */\nmodule.exports = window.react;","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  width: \"16\",\n  height: \"16\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.301 1.796l-.537.93L12.626 3.8l.537-.93a.538.538 0 00-.197-.735l-.93-.538a.537.537 0 00-.735.198z\",\n  fill: \"#000\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 2.42c.34 0 .672.033 1 .08v-.87l.687-.005V.5a.5.5 0 00-.5-.5h-2.37a.5.5 0 00-.5.5v1.125L7 1.63v.87c.328-.047.66-.08 1-.08zM8 3a6.5 6.5 0 100 13A6.5 6.5 0 008 3zm3.037 9.555L7.25 9.933V6.23h1.093v3.13l3.317 2.295-.623.899z\",\n  fill: \"currentcolor\"\n}));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport { registerClientExtension } from 'camunda-modeler-plugin-helpers';\n\nimport AutoSavePlugin from './AutoSavePlugin';\n\nregisterClientExtension(AutoSavePlugin);\n"],"names":[],"sourceRoot":""}